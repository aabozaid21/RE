@model RE.Models.Project

@{
    ViewBag.Title = "CreateTeam";
    Layout = "~/Views/Shared/_Layout_pm.cshtml";
}
<h1>.</h1>
<h2>CreateTeam & Set Price & Comment & Leave Project</h2>
@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)


        <div class="form-group">
            @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PMName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PMName, new { htmlAttributes = new { @Value = @Session["UserName"].ToString(), @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.PMName, "", new { @class = "text-danger" })
            </div>
        </div>
        <input type="button" id="btnpopu" value="Search For JE and TL" onclick="ShowPopup();" />
        <script type="text/javascript">

                ShowPopup = function () {
                    window.open('/PM/search', "PopupWindow", 'width=400px,height=400px,top=150,left=250');
                }

        </script>
        <div class="form-group">
            @Html.LabelFor(model => model.TLName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TLName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TLName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JEName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.JEName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JEName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                .
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PMAccept, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PMAccept)
                    @Html.ValidationMessageFor(model => model.PMAccept, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.HiddenFor(model => model.Approval)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.HiddenFor(model => model.TLAccept)
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.HiddenFor(model => model.Assign)
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.HiddenFor(model => model.JEAccept)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.HiddenFor(model => model.Delivered)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">

                @Html.HiddenFor(model => model.Feedback)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Profile", "Index")
</div>


